<%= turbo_frame_tag "contact_form" do %>
  <%= form_with(model: contact, url: create_message_path, class: "space-y-6", data: { turbo: true }) do |form| %>
    <%= form.hidden_field :website, value: "", class: "hidden" %>
    <%= form.hidden_field :submitted_at, value: Time.current.to_i %>
    <%= form.hidden_field :recaptcha_token, id: "recaptcha_token" %>
    
    <% if Rails.env.production? %>
      <script src="https://www.google.com/recaptcha/api.js?render=6Lc4SmMrAAAAANibvQnTRuTeIPxExTC8CoDF38_3"></script>
    <% end %>

    <div>
      <%= form.label :name, t('contact.form.name'), class: "block text-gray-300 mb-2" %>
      <%= form.text_field :name, 
          class: "w-full px-4 py-2 rounded bg-gray-600 border border-gray-500 text-white focus:outline-none focus:border-cyan-400 #{'border-red-500' if contact&.errors&.include?(:name)}" %>
      <% if contact&.errors&.include?(:name) %>
        <p class="mt-1 text-red-500 text-sm"><%= contact.errors[:name].join(', ') %></p>
      <% end %>
    </div>

    <div>
      <%= form.label :email, t('contact.form.email'), class: "block text-gray-300 mb-2" %>
      <%= form.email_field :email, 
          class: "w-full px-4 py-2 rounded bg-gray-600 border border-gray-500 text-white focus:outline-none focus:border-cyan-400 #{'border-red-500' if contact&.errors&.include?(:email)}" %>
      <% if contact&.errors&.include?(:email) %>
        <p class="mt-1 text-red-500 text-sm"><%= contact.errors[:email].join(', ') %></p>
      <% end %>
    </div>

    <div>
      <%= form.label :subject, t('contact.form.subject'), class: "block text-gray-300 mb-2" %>
      <%= form.text_field :subject, 
          class: "w-full px-4 py-2 rounded bg-gray-600 border border-gray-500 text-white focus:outline-none focus:border-cyan-400 #{'border-red-500' if contact&.errors&.include?(:subject)}" %>
      <% if contact&.errors&.include?(:subject) %>
        <p class="mt-1 text-red-500 text-sm"><%= contact.errors[:subject].join(', ') %></p>
      <% end %>
    </div>

    <div>
      <%= form.label :message, t('contact.form.message'), class: "block text-gray-300 mb-2" %>
      <%= form.text_area :message, rows: 4, 
          class: "w-full px-4 py-2 rounded bg-gray-600 border border-gray-500 text-white focus:outline-none focus:border-cyan-400 #{'border-red-500' if contact&.errors&.include?(:message)}" %>
      <% if contact&.errors&.include?(:message) %>
        <p class="mt-1 text-red-500 text-sm"><%= contact.errors[:message].join(', ') %></p>
      <% end %>
    </div>

    <%= form.submit t('contact.form.send'), 
        class: "w-full bg-cyan-500 hover:bg-cyan-600 text-white font-bold py-2 px-4 rounded transition-colors cursor-pointer" %>
  <% end %>
<% end %>

<script>
document.addEventListener('DOMContentLoaded', function() {
  initializeRecaptcha();
});

document.addEventListener('turbo:load', function() {
  initializeRecaptcha();
});

function initializeRecaptcha() {
  const form = document.querySelector('form');
  if (!form) return;
  
  const siteKey = '<%= ENV['RECAPTCHA_SITE_KEY'] %>';
  
  if (siteKey && siteKey.length > 0) {
    // Check if reCAPTCHA script is loaded
    if (typeof grecaptcha === 'undefined') {
      const script = document.querySelector('script[src*="recaptcha/api.js"]');
      if (!script) {
        console.error('reCAPTCHA script not loaded');
      }
    }
    
    // Remove existing event listener to prevent duplicates
    form.removeEventListener('submit', handleFormSubmit);
    form.addEventListener('submit', handleFormSubmit);
  }
}

function handleFormSubmit(e) {
  e.preventDefault();
  
  const form = e.target;
  
  if (typeof grecaptcha === 'undefined') {
    form.submit();
    return;
  }
  
  grecaptcha.ready(function() {
    grecaptcha.execute('<%= ENV['RECAPTCHA_SITE_KEY'] %>', {action: 'contact_form'})
      .then(function(token) {
        document.getElementById('recaptcha_token').value = token;
        form.submit();
      })
      .catch(function(error) {
        console.error('reCAPTCHA error:', error.message);
        form.submit();
      });
  });
}
</script>